/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        // 中序遍历，存入列表中
        List<Integer> result = new ArrayList<>();
        inorder(result, root);
        // 拿到第k个节点第值
        return result.get(k-1);


    }
    // 二叉树的中序遍历
    public List<Integer> inorder(List<Integer> result, TreeNode node) {
        if (node == null) return null;
        inorder(result, node.left);
        result.add(node.val);
        inorder(result, node.right);
        return result;
    }
}
