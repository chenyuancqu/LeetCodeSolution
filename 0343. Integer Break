class Solution {
    // 动态规划
    public int integerBreak(int n) {
        int[] dp = new int[n + 1];  // 因为要输出dp[n]，所以数组长度为n+1
        dp[2] = 1;
        for (int i = 3; i <= n; i++) {
            for (int j = 1; j <= i - j; j++) {   // 再往i - j后去就是重复
                //递推公式
                dp[i] = Math.max(dp[i], Math.max(dp[i - j] * j, (i - j) * j));
            }
        }
        return dp[n];
    }
}
//leetcode submit region end(Prohibit modification and deletion)
