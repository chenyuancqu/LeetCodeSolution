class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        // 存储结果数组
        int[] res = new int[n];
        // 求前缀积
        res[0] = 1;
        for (int i = 1; i < n; i++) {
            res[i] = res[i - 1] * nums[i - 1];
        }

        int rightProduct = 1;
        for (int i = n - 1; i >= 0; i--) {
            res[i] *= rightProduct;
            rightProduct *= nums[i];    // 更新rightproduct
        }

        return res;


        /* int n = nums.length;

        // 求前缀积
        int[] leftAns = new int[n];
        leftAns[0] = 1;
        for (int i = 1; i < n; i++) {
            leftAns[i] = leftAns[i - 1] * nums[i - 1];
        }

        // 求后缀积
        int[] afterAns = new int[n];
        afterAns[n-1] = 1;
        for (int i = n - 2; i >= 0; i--) {
            afterAns[i] = afterAns[i + 1] * nums[i + 1];
        }

        // 结果集
        int[] res = new int[n];
        for (int i = 0; i < n; i++) {
            // answer[i] = afterA[i] * answer[i];
            res[i] = leftAns[i] * afterAns[i];
        }
        return res; */
    }
}
