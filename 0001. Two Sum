class Solution {
    
    public int[] twoSum(int[] nums, int target) {
        // 方法1，暴力拆解
        // for (int i = 0; i < nums.length - 1; i++) {
        //     for (int j = i + 1; j < nums.length; j++) {
        //         if (nums[i] + nums[j] == target) {
        //             return new int[]{i, j};
        //         }
        //     }
        // }
        // return new int[]{-1, -1};
        // 方法2:使用HashMap
        HashMap <Integer, Integer> map = new HashMap<>();    // 新建一个哈希表
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];          // 存储nums[i]的对应相加值
            if (map.containsKey(complement)) {          // 观察哈希表中是否存在对应值
                return new int[]{map.get(complement), i}; //存在则返回对应值的value
            }
            map.put(nums[i], i);  // 将nums[i]以及对应索引存入哈希表中，方便此后查找
        }
        return new int[]{-1, -1};
        }


    
}
