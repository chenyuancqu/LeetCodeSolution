// 方法1 ： 使用哈希表存储元素出现的次数，输出出现次数为1的key值
class Solution {
    public int singleNumber(int[] nums) {
        if (nums.length == 1) return nums[0];

        Map<Integer, Integer> map = new HashMap<>();

        for (int i = 0; i < nums.length; i++) {
            if (map.containsKey(nums[i])) {
                map.put(nums[i], 2);
            } else {
                map.put(nums[i], 1);
            }
        }

        for (Map.Entry entry : map.entrySet()) {
            if ((int)entry.getValue() == 1) {
                return (int)entry.getKey();
            }
        }
        return -1;


    }
}

// 方法2:思路：使用异或的结合律，即所有两个的元素最终都会被消掉
class Solution {
    public int singleNumber(int[] nums) {
        int single = 0; // 用来与其他数字异或
        for (int i = 0; i < nums.length; i++) {
            single = single ^ nums[i];
        }
        return single;


    }
}
