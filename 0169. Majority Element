// 思路：使用哈希表存储数组中每个元素出现次数，随后遍历哈希表查询出现次数大于n/2的key值，这里（int）n/2 即为向下取整

class Solution {
    public int majorityElement(int[] nums) {
        // 返回出现次数大于n/2的元素
        int n = nums.length;
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            if (map.containsKey(nums[i])) {
                map.put(nums[i], map.get(nums[i]) + 1);
            } else {
                map.put(nums[i], 1);
            }
        }

        for (Map.Entry entry : map.entrySet()) {
            if ((int)entry.getValue() > (int)(n / 2)) {
                return (int)entry.getKey();
            }
        }
        return -1;

    }
}

// 思路2，对数组进行排序，超过n/2元素排序后一定会占到n/2的位置，输出即可
