/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // 存放结果集
        ListNode res = new ListNode(-1);
        ListNode cur = res;
        int carry = 0;

        while (l1 != null || l2 != null || carry != 0) {
            // 计算对应位置相加之和 + 进位
            int sum = (l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val) + carry;
            // 添加处理后结果到结果链表中
            cur.next = new ListNode(sum % 10);
            // 获取进位值
            carry = sum / 10;
            // 指向下一个结点
            cur = cur.next;

            // 处理下一个原始链表
            if (l1 != null) l1 = l1.next;
            if (l2 != null) l2 = l2.next;
            
        }
        return res.next;
        
    }
}
